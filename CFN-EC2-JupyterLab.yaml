AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  License: Apache-2.0
Description: >-
  This template creates creates an EC2 instance running an Ubuntu Deep Learning Base
  AMI attached to the EIP referenced by 'InstanceEIP::Address' with the profile 
  'InstanceProfile::S3Access' (both of these created in a previous stack).  
  Ports 22,8888 and 443 are open to connections from <ip range>.
  On startup, the image will install jupyterlab and run a server.
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues: [t2.nano, t2.micro, t2.small, t2.medium, t2.large, t2.xlarge, t2.2xlarge, t3.nano, t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge]
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 89.36.64.36/32
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref 'InstanceType'
      SecurityGroups: [!Ref 'InstanceSecurityGroup', !Ref 'JupyterSecurityGroup']
      KeyName: !Ref 'KeyName'
      ImageId: ami-06bdd60600636ebdf
      IamInstanceProfile: !ImportValue 'InstanceProfile::S3Access'
      UserData:
        Fn::Base64: !Sub |
             #!/bin/bash -ex
             pip install jupyterlab;
             echo "c.NotebookApp.password = 'sha1:05513094bc5a:53d1c0867023c4d6bf4ba1546adc1cfe12778720'" > /home/ubuntu/.jconfig.py;
             echo "c.NotebookApp.password_required = True" >> /home/ubuntu/.jconfig.py;
             echo "c.NotebookApp.allow_origin = '*'" >> /home/ubuntu/.jconfig.py;
             echo "c.NotebookApp.open_browser = False" >> /home/ubuntu/.jconfig.py;
             echo "c.NotebookApp.port = 8888" >> /home/ubuntu/.jconfig.py;
             echo "c.NotebookApp.notebook_dir = '/home/ubuntu/'" >> /home/ubuntu/.jconfig.py;
             echo "c.NotebookApp.ip = '0.0.0.0'" >> /home/ubuntu/.jconfig.py;
             su ubuntu -c "jupyter-lab --config /home/ubuntu/.jconfig.py;"
  InstanceIpAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      EIP: !ImportValue 'InstanceEIP::Address'
      InstanceId: !Ref 'EC2Instance'
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref 'SSHLocation'
  JupyterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access to default jupyter port
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 8888
        ToPort: 8888
        CidrIp: !Ref 'SSHLocation'
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: !Ref 'SSHLocation'
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref 'EC2Instance'
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, AvailabilityZone]
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicDnsName]
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicIp]
